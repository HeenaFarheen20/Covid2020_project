/*
Covid 20 Data Exploration 

Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types

*/


Create database Project_portfolio;
Show databases;
use Project_portfolio;
SELECT * FROM project_portfolio.`covid vaccination`;

-- Select Data that we are going to be starting with

SELECT * FROM project_portfolio.`covid deaths`
order by 3,4;
SELECT * FROM project_portfolio.`covid vaccination`
order by 3,4;

-- Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract covid in the country "India"

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM project_portfolio.`covid deaths`
order by 1, 2;

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as death_percentage
FROM project_portfolio.`covid deaths`
where location = 'India'
order by 1, 2;

-- Countries with Highest Infection Rate compared to Population

SELECT location ,population, MAX(total_cases) as Highest_infection_count, Max((total_cases/population))*100 as percentage_population_infected
FROM project_portfolio.`covid deaths`
Group by Location, Population
order by percentage_population_infected desc;

-- Countries with Highest Death Count per Population

SELECT location ,population, MAX(total_deaths) as Highest_death_count, Max((total_deaths/population))*100 as percentage_population_death
FROM project_portfolio.`covid deaths`
where continent is not null
Group by Location, Population
order by percentage_population_death desc;

-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population

SELECT location , MAX(cast('total_deaths' as unsigned)) as total_death_count
FROM project_portfolio.`covid deaths`
where continent is not null
Group by Location
order by total_death_count desc;

-- GLOBAL NUMBERS

SELECT continent , MAX(total_deaths) as total_death_count
FROM project_portfolio.`covid deaths`
where continent is not null
Group by continent
order by total_death_count desc;

-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

SELECT dea.continent, dea.location, dea.date, vac.new_vaccinations,
SUM(cast(vac.new_vaccinations as unsigned)) over(partition by dea.location order by dea.location and dea.date) as rollingpeoplevaccinated FROM 
project_portfolio.`covid deaths`as dea join project_portfolio.`covid vaccination` as vac 
on dea.location = vac.location and
dea.date = vac.date
where dea.continent is not null
order by 2, 3;

-- Using CTE to perform Calculation on Partition By in previous query

with popvsvac (continent, location, date, population, new_vaccinations, rollingpeoplevaccinated)
as
(SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
SUM(cast(vac.new_vaccinations as unsigned)) over(partition by dea.location order by dea.location and dea.date) as rollingpeoplevaccinated FROM 
project_portfolio.`covid deaths`as dea join project_portfolio.`covid vaccination` as vac 
on dea.location = vac.location and
dea.date = vac.date
where dea.continent is not null)
select * from popvsvac;
